# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core


variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  DOTNET_SDK_VERSION: 2.1.505

trigger:
- master

jobs:
- job: Windows
  displayName: Build on Windows

  pool:
    vmImage: 'windows-latest'

  steps:
    - task: NuGetToolInstaller@0

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: VSTest@2
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
    
- job: Linux
  displayName: Build on Linux

  pool:
    vmImage: 'Ubuntu 16.04'

  steps:
  - script: dotnet restore src/
    displayName: 'dotnet restore'

  - script: dotnet build src/ --configuration $(buildConfiguration)
    displayName: 'dotnet build $(buildConfiguration)'
  
  - task: DotNetCoreCLI@2
    displayName: 'dotnet test $(buildConfiguration)'
    inputs:
      command: test
      projects: '**/*Tests/*.csproj'
      arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'

- job: Docker
  displayName: Build Docker Image

  pool:
    vmImage: 'Ubuntu 16.04'

  steps:
  - task: Docker@1
    displayName: 'Build image'

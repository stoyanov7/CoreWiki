@page

@using CoreWiki.Utilities
@model SearchModel

@{
    ViewData["Title"] = "Search";
    var searchResult = Model.SearchResult;
}

<h1 class="h1">Search CoreWiki</h1>
<form asp-page="Search" method="get" class="my-2">
    <div class="form-group">
        <div class="input-group">
            <input class="form-control" type="text" name="searchValue" value="@searchResult?.Query" placeholder="Search for articles on CoreWiki"/>
            <div class="input-group-append">
                <button class="btn badge-primary" type="submit">Search</button>
            </div>
        </div>
    </div>
</form>
@if (searchResult != null)
{
    <div class="mb-2">
        @StringHelper.Pluralize("result", "results", @searchResult.TotalResults, true) found for <strong>@searchResult.Query</strong>
    </div>

    foreach (var item in searchResult.Articles)
    {
        <div class="card border border-primary mb-3">
            <div class="card-header">
                <h3 class="card-title">
                    <a asp-page="./Article/Details" asp-route-slug="@item.Slug">@item.Topic</a>
                </h3>
            </div>
            <div class="card-body">
                <h6 class="card-subtitle mb-2 text-muted">
                    <span data-value="@item.Published" class="timeStampValue"> @item.Published</span>
                </h6>
                <h6 class="card-subtitle mb-2 text-muted">
                    <span>Comments: @item.Comments.Count</span>
                </h6>
                <a class="btn btn-primary" asp-page="./Article/Details" asp-route-slug="@item.Slug">Details</a>
                <a class="btn btn-warning" asp-page="./Article/Edit" asp-route-slug="@item.Slug">Edit</a>
                <a class="btn btn-danger" asp-page="./Article/Delete" asp-route-slug="@item.Slug" asp-policy="CanDeleteArticle">Delete</a>
            </div>
        </div>
    }
}
@page "{slug?}"
@model CoreWiki.Web.Pages.Article.EditModel

@{
    ViewData["Title"] = "Edit";
}

<div class="row">
    <div class="col-md-12">
        <h2>Edit</h2>
        <hr />
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Article.Id"/>
            <div class="form-group">
                <label asp-for="Article.Topic" class="control-label"></label>
                <input asp-for="Article.Topic" class="form-control" readonly="readonly"/>
                <span asp-validation-for="Article.Topic" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Article.Content" class="control-label"></label>
                <textarea asp-for="Article.Content" class="form-control"></textarea>
                <span asp-validation-for="Article.Content" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-success" />
                <input type="file" class="btn btn-default" onchange="openFile(event)" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="./Index">Back to List</a>
</div>

@section Styles {
    <link href="~/lib/simplemde/simplemde.min.css" rel="stylesheet" />
}

@section Scripts {
    <script src="~/lib/simplemde/simplemde.min.js"></script>
    <script>
        var simplemde = new SimpleMDE();

        var openFile = function (event) {
            let input = event.target;
            let reader = new FileReader();

            reader.onload = function () {
                let text = simplemde.value();

                text += `\n${reader.result}`;
                simplemde.value(text);
            }

            reader.readAsText(input.files[0]);
        }
    </script>

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
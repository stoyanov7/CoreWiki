@page "{slug?}"
@using CoreWiki.Utilities
@model CoreWiki.Web.Pages.Article.DetailsModel

@{
    ViewData["Title"] = "Details";
}

<h2>@Model.Article.Topic</h2>
<h5>
    Last Published: <span data-value="@Model.Article.Published" class="timeStampValue"> @Model.Article.Published</span>
</h5>
<h5>View Count: <span data-value="@Model.Article.ViewCount">@Model.Article.ViewCount</span></h5>
<h5>Estimated reading time: <span class="duration" data-duration="@Model.Article.Content.CalculateReadTime().TotalMilliseconds"></span></h5>
<markdown markdown="@Model.Article.Content"></markdown>
<div>
    <a asp-page="./Edit" asp-route-slug="@Model.Article.Slug" class="btn btn-warning">Edit</a>
    <a asp-page="./Index" class="btn btn-outline-primary">Back to List</a>
</div>

@await Component.InvokeAsync("CreateComments", new Models.Comment { ArticleId = Model.Article.Id })
@await Component.InvokeAsync("ListComments", @Model.Article.Comments)

@section Styles {
    <link href="~/lib/simplemde/simplemde.min.css" rel="stylesheet" />
}

@section Scripts {
<script type="text/javascript">
        $('.duration').each(function () {
            var duration = Number($(this).attr('data-duration'));
            $(this).text(moment.duration(duration).humanize());
        });
</script>

    <script src="~/lib/simplemde/simplemde.min.js"></script>
    <script>
        var simplemde = new SimpleMDE();
    </script>

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}